name: Build MacOS

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      binary:
        required: true
        type: string
      run_macos_intel:
        required: true
        type: string
      run_macos_apple_silicon:
        required: true
        type: string


jobs:
  build-macos-intel:
    if: inputs.run_macos_intel == 'true'
    name: macos_intel
    env:
      platform: darwin-x86_64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"
          rustup component add rust-std --target x86_64-apple-darwin

      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin

      - name: Set file name
        id: set_file_name
        run: |
          echo "file_name=${{ inputs.binary }}_${{ inputs.tag }}_${{ env.platform }}" >> "$GITHUB_OUTPUT"

      - name: Prepare Package
        run: |
          cp target/x86_64-apple-darwin/release/${{ inputs.binary }} ${{ steps.set_file_name.outputs.file_name }}

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.platform }}
          path: ${{ steps.set_file_name.outputs.file_name }}
          retention-days: 1

  build-macos-apple-silicon:
    name: macos_apple_silicon
    if: inputs.run_macos_apple_silicon == 'true'
    env:
      platform: darwin-aarch64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Environment
        # macos 11 was the first version to support ARM
        run: |
          export MACOSX_DEPLOYMENT_TARGET="11"

      - name: Build
        run: |
          cargo build --release --target aarch64-apple-darwin

      - name: Set file name
        id: set_file_name
        run: |
          echo "file_name=${{ inputs.binary }}_${{ inputs.tag }}_${{ env.platform }}" >> "$GITHUB_OUTPUT"

      - name: Prepare Package
        run: |
          cp target/aarch64-apple-darwin/release/${{ inputs.binary }} ${{ steps.set_file_name.outputs.file_name }}

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.platform }}
          path: ${{ steps.set_file_name.outputs.file_name }}
          retention-days: 1
